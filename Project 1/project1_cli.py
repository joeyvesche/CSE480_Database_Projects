#!/usr/bin/env python3
"""
DO NOT EDIT THIS FILE!
You should only be editing "project1.py"!

Imports the functions defined in project1.py to perfom
conversions on files with names like:
"crime.convert_to_xml.csv"

Such a file should cause a file named "crime.xml" to be
created. 
"""

from project1 import *
import argparse
import os

def get_output_path(path):
    """
    Converts a string like "Test_Suite/crime.convert_to_json.csv" to
    "crime.json".
    """
    directory, filename = os.path.split(path)
    parts = filename.split(".")
    assert len(parts) == 3
    base, convert_to, ext = parts
    assert convert_to.startswith("convert_to_")
    output_ext = convert_to[len("convert_to_"):]
    return base + "." + output_ext
    
def get_extension(filename):
    """
    Converts a filename to extension.
    "hello.csv" -> "csv"
    """
    _, dot_ext = os.path.splitext(filename)
    return dot_ext[1:]


def main():

    parser = argparse.ArgumentParser(description="""
Converts between CSV, JSON, and XML formats.
Input file should be named like: "crime.convert_to_xml.csv"
Should create a file named "crime.xml"
""")
    parser.add_argument('input_file')
    args = parser.parse_args()
    output_file = get_output_path(args.input_file)
    input_extension = get_extension(args.input_file)
    output_extension = get_extension(output_file)
    read_dict = {"csv":read_csv_file, "json":read_json_file, "xml":read_xml_file}
    write_dict = {"csv":write_csv_file, "json":write_json_file, "xml":write_xml_file}
    assert input_extension in read_dict
    assert output_extension in write_dict
    data = read_dict[input_extension](args.input_file)
    write_dict[output_extension](output_file, data)


if __name__ == "__main__":
    main()
